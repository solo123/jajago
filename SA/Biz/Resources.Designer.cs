//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace com.jajago.SA.Biz
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class jajagoEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“jajagoEntities”部分中的连接字符串初始化新 jajagoEntities 对象。
        /// </summary>
        public jajagoEntities() : base("name=jajagoEntities", "jajagoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 jajagoEntities 对象。
        /// </summary>
        public jajagoEntities(string connectionString) : base(connectionString, "jajagoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 jajagoEntities 对象。
        /// </summary>
        public jajagoEntities(EntityConnection connection) : base(connection, "jajagoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Resource> Resources
        {
            get
            {
                if ((_Resources == null))
                {
                    _Resources = base.CreateObjectSet<Resource>("Resources");
                }
                return _Resources;
            }
        }
        private ObjectSet<Resource> _Resources;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Taxonomy> Taxonomies
        {
            get
            {
                if ((_Taxonomies == null))
                {
                    _Taxonomies = base.CreateObjectSet<Taxonomy>("Taxonomies");
                }
                return _Taxonomies;
            }
        }
        private ObjectSet<Taxonomy> _Taxonomies;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Taxon> Taxons
        {
            get
            {
                if ((_Taxons == null))
                {
                    _Taxons = base.CreateObjectSet<Taxon>("Taxons");
                }
                return _Taxons;
            }
        }
        private ObjectSet<Taxon> _Taxons;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SearchPath> SearchPaths
        {
            get
            {
                if ((_SearchPaths == null))
                {
                    _SearchPaths = base.CreateObjectSet<SearchPath>("SearchPaths");
                }
                return _SearchPaths;
            }
        }
        private ObjectSet<SearchPath> _SearchPaths;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Music> Musics
        {
            get
            {
                if ((_Musics == null))
                {
                    _Musics = base.CreateObjectSet<Music>("Musics");
                }
                return _Musics;
            }
        }
        private ObjectSet<Music> _Musics;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Resources EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToResources(Resource resource)
        {
            base.AddObject("Resources", resource);
        }
    
        /// <summary>
        /// 用于向 Taxonomies EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTaxonomies(Taxonomy taxonomy)
        {
            base.AddObject("Taxonomies", taxonomy);
        }
    
        /// <summary>
        /// 用于向 Taxons EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTaxons(Taxon taxon)
        {
            base.AddObject("Taxons", taxon);
        }
    
        /// <summary>
        /// 用于向 SearchPaths EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSearchPaths(SearchPath searchPath)
        {
            base.AddObject("SearchPaths", searchPath);
        }
    
        /// <summary>
        /// 用于向 Images EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// 用于向 Musics EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMusics(Music music)
        {
            base.AddObject("Musics", music);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="jajagoModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Image 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static Image CreateImage(global::System.String id)
        {
            Image image = new Image();
            image.id = id;
            return image;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String width
        {
            get
            {
                return _width;
            }
            set
            {
                OnwidthChanging(value);
                ReportPropertyChanging("width");
                _width = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("width");
                OnwidthChanged();
            }
        }
        private global::System.String _width;
        partial void OnwidthChanging(global::System.String value);
        partial void OnwidthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String height
        {
            get
            {
                return _height;
            }
            set
            {
                OnheightChanging(value);
                ReportPropertyChanging("height");
                _height = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("height");
                OnheightChanged();
            }
        }
        private global::System.String _height;
        partial void OnheightChanging(global::System.String value);
        partial void OnheightChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dpi
        {
            get
            {
                return _dpi;
            }
            set
            {
                OndpiChanging(value);
                ReportPropertyChanging("dpi");
                _dpi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dpi");
                OndpiChanged();
            }
        }
        private global::System.String _dpi;
        partial void OndpiChanging(global::System.String value);
        partial void OndpiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String filetype
        {
            get
            {
                return _filetype;
            }
            set
            {
                OnfiletypeChanging(value);
                ReportPropertyChanging("filetype");
                _filetype = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("filetype");
                OnfiletypeChanged();
            }
        }
        private global::System.String _filetype;
        partial void OnfiletypeChanging(global::System.String value);
        partial void OnfiletypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] thumb
        {
            get
            {
                return StructuralObject.GetValidValue(_thumb);
            }
            set
            {
                OnthumbChanging(value);
                ReportPropertyChanging("thumb");
                _thumb = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("thumb");
                OnthumbChanged();
            }
        }
        private global::System.Byte[] _thumb;
        partial void OnthumbChanging(global::System.Byte[] value);
        partial void OnthumbChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String filename
        {
            get
            {
                return _filename;
            }
            set
            {
                OnfilenameChanging(value);
                ReportPropertyChanging("filename");
                _filename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("filename");
                OnfilenameChanged();
            }
        }
        private global::System.String _filename;
        partial void OnfilenameChanging(global::System.String value);
        partial void OnfilenameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fileext
        {
            get
            {
                return _fileext;
            }
            set
            {
                OnfileextChanging(value);
                ReportPropertyChanging("fileext");
                _fileext = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fileext");
                OnfileextChanged();
            }
        }
        private global::System.String _fileext;
        partial void OnfileextChanging(global::System.String value);
        partial void OnfileextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="jajagoModel", Name="Music")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Music : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Music 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static Music CreateMusic(global::System.String id)
        {
            Music music = new Music();
            music.id = id;
            return music;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String artist
        {
            get
            {
                return _artist;
            }
            set
            {
                OnartistChanging(value);
                ReportPropertyChanging("artist");
                _artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("artist");
                OnartistChanged();
            }
        }
        private global::System.String _artist;
        partial void OnartistChanging(global::System.String value);
        partial void OnartistChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String album
        {
            get
            {
                return _album;
            }
            set
            {
                OnalbumChanging(value);
                ReportPropertyChanging("album");
                _album = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("album");
                OnalbumChanged();
            }
        }
        private global::System.String _album;
        partial void OnalbumChanging(global::System.String value);
        partial void OnalbumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String publish
        {
            get
            {
                return _publish;
            }
            set
            {
                OnpublishChanging(value);
                ReportPropertyChanging("publish");
                _publish = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("publish");
                OnpublishChanged();
            }
        }
        private global::System.String _publish;
        partial void OnpublishChanging(global::System.String value);
        partial void OnpublishChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String music_type
        {
            get
            {
                return _music_type;
            }
            set
            {
                Onmusic_typeChanging(value);
                ReportPropertyChanging("music_type");
                _music_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("music_type");
                Onmusic_typeChanged();
            }
        }
        private global::System.String _music_type;
        partial void Onmusic_typeChanging(global::System.String value);
        partial void Onmusic_typeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="jajagoModel", Name="Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resource : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Resource 对象。
        /// </summary>
        /// <param name="taxonomy_id">taxonomy_id 属性的初始值。</param>
        /// <param name="id">id 属性的初始值。</param>
        public static Resource CreateResource(global::System.String taxonomy_id, global::System.String id)
        {
            Resource resource = new Resource();
            resource.taxonomy_id = taxonomy_id;
            resource.id = id;
            return resource;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String taxonomy_id
        {
            get
            {
                return _taxonomy_id;
            }
            set
            {
                Ontaxonomy_idChanging(value);
                ReportPropertyChanging("taxonomy_id");
                _taxonomy_id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("taxonomy_id");
                Ontaxonomy_idChanged();
            }
        }
        private global::System.String _taxonomy_id;
        partial void Ontaxonomy_idChanging(global::System.String value);
        partial void Ontaxonomy_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String taxon_id
        {
            get
            {
                return _taxon_id;
            }
            set
            {
                Ontaxon_idChanging(value);
                ReportPropertyChanging("taxon_id");
                _taxon_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("taxon_id");
                Ontaxon_idChanged();
            }
        }
        private global::System.String _taxon_id;
        partial void Ontaxon_idChanging(global::System.String value);
        partial void Ontaxon_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> created_at
        {
            get
            {
                return _created_at;
            }
            set
            {
                Oncreated_atChanging(value);
                ReportPropertyChanging("created_at");
                _created_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("created_at");
                Oncreated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _created_at;
        partial void Oncreated_atChanging(Nullable<global::System.DateTime> value);
        partial void Oncreated_atChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="jajagoModel", Name="SearchPath")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchPath : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SearchPath 对象。
        /// </summary>
        /// <param name="path">path 属性的初始值。</param>
        public static SearchPath CreateSearchPath(global::System.String path)
        {
            SearchPath searchPath = new SearchPath();
            searchPath.path = path;
            return searchPath;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                if (_path != value)
                {
                    OnpathChanging(value);
                    ReportPropertyChanging("path");
                    _path = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("path");
                    OnpathChanged();
                }
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> count
        {
            get
            {
                return _count;
            }
            set
            {
                OncountChanging(value);
                ReportPropertyChanging("count");
                _count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("count");
                OncountChanged();
            }
        }
        private Nullable<global::System.Int64> _count;
        partial void OncountChanging(Nullable<global::System.Int64> value);
        partial void OncountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> updated_at
        {
            get
            {
                return _updated_at;
            }
            set
            {
                Onupdated_atChanging(value);
                ReportPropertyChanging("updated_at");
                _updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("updated_at");
                Onupdated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _updated_at;
        partial void Onupdated_atChanging(Nullable<global::System.DateTime> value);
        partial void Onupdated_atChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="jajagoModel", Name="Taxon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Taxon : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Taxon 对象。
        /// </summary>
        /// <param name="parent_id">parent_id 属性的初始值。</param>
        /// <param name="taxonomy_id">taxonomy_id 属性的初始值。</param>
        /// <param name="id">id 属性的初始值。</param>
        public static Taxon CreateTaxon(global::System.String parent_id, global::System.String taxonomy_id, global::System.String id)
        {
            Taxon taxon = new Taxon();
            taxon.parent_id = parent_id;
            taxon.taxonomy_id = taxonomy_id;
            taxon.id = id;
            return taxon;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String parent_id
        {
            get
            {
                return _parent_id;
            }
            set
            {
                Onparent_idChanging(value);
                ReportPropertyChanging("parent_id");
                _parent_id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("parent_id");
                Onparent_idChanged();
            }
        }
        private global::System.String _parent_id;
        partial void Onparent_idChanging(global::System.String value);
        partial void Onparent_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String taxonomy_id
        {
            get
            {
                return _taxonomy_id;
            }
            set
            {
                Ontaxonomy_idChanging(value);
                ReportPropertyChanging("taxonomy_id");
                _taxonomy_id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("taxonomy_id");
                Ontaxonomy_idChanged();
            }
        }
        private global::System.String _taxonomy_id;
        partial void Ontaxonomy_idChanging(global::System.String value);
        partial void Ontaxonomy_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="jajagoModel", Name="Taxonomy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Taxonomy : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Taxonomy 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static Taxonomy CreateTaxonomy(global::System.String id)
        {
            Taxonomy taxonomy = new Taxonomy();
            taxonomy.id = id;
            return taxonomy;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> position
        {
            get
            {
                return _position;
            }
            set
            {
                OnpositionChanging(value);
                ReportPropertyChanging("position");
                _position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("position");
                OnpositionChanged();
            }
        }
        private Nullable<global::System.Int32> _position;
        partial void OnpositionChanging(Nullable<global::System.Int32> value);
        partial void OnpositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pattern
        {
            get
            {
                return _pattern;
            }
            set
            {
                OnpatternChanging(value);
                ReportPropertyChanging("pattern");
                _pattern = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pattern");
                OnpatternChanged();
            }
        }
        private global::System.String _pattern;
        partial void OnpatternChanging(global::System.String value);
        partial void OnpatternChanged();

        #endregion
    
    }

    #endregion
    
}
